[
uuid(38541DBE-A76D-4A92-AD08-F5929C6DD520),
helpstring("calling Rust from VBA"),
version(1.0)
]
library RustyVenture
{
    [helpstring("A structured type")]
    typedef struct MyType {
        int x;
        int y;
    } MyType;

    [
    uuid(66E007F4-501E-46FE-9E57-8550C38A4013),
    helpstring("the main DLL"),
    dllname("rust_stdcall.dll"),
    ]
    module RustStdcall
    {
        [helpstring("Unable to allocate SAFEARRAY")]
        const DWORD E_ALLOC_ARRAY = 0x20000000 | 0x01;

        [helpstring("Unable to lock SAFEARRAY")]
        const DWORD E_LOCK_ARRAY = 0x20000000 | 0x02;

        [helpstring("Not a valid UTF-16 string")]
        const DWORD E_INVALID_STRING = 0x20000000 | 0x03;

        [helpstring("Division by zero")]
        const DWORD E_DIV_0 = 0x20000000 | 0x04;

        [
        entry("add_em"),
        helpstring("Adds two numbers"),
        ]
        int __stdcall add_em(int x, int y);

        [
        entry("dot_product"),
        helpstring("Dot product"),
        ]
        double __stdcall dot_product(const double *x, const double *y, size_t n);

        [
        entry("struct_slope"),
        helpstring("Struct slope"),
        usesgetlasterror,
        ]
        double struct_slope(const MyType *s);

        [
        entry("dotty"),
        helpstring("dot product on COM arrays"),
        usesgetlasterror,
        ]
        /* here's something wacky:
         *   we use one level of indirection here, but two in the implementing code (!)
         *   c.f. "Essential COM" p. 342
         */
        double dotty([in] SAFEARRAY (double)*xs, [in] SAFEARRAY (double)*ys);

        [
        entry("word_count"),
        helpstring("count whitespace-separated words"),
        usesgetlasterror,
        ]
        int word_count([in] BSTR bstr);

        [
        entry("greet"),
        helpstring("greet somebody"),
        usesgetlasterror,
        ]
        BSTR greet([in] BSTR whom);

        [
        entry("iota"),
        helpstring("generate a range of Doubles"),
        usesgetlasterror,
        ]
        SAFEARRAY (double) iota(double from, double to, double step);
    }
};
